// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VH.PluralsightScraper.Data;

namespace VH.PluralsightScraper.Migrations
{
    [DbContext(typeof(PluralsightContext))]
    [Migration("20190720163534_ChannelCourseUniqueIndex")]
    partial class ChannelCourseUniqueIndex
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("public")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("VH.PluralsightScraper.Domain.Channel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAtUTC");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdatedAtUTC");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Channels");
                });

            modelBuilder.Entity("VH.PluralsightScraper.Domain.ChannelCourse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ChannelId");

                    b.Property<int>("CourseId");

                    b.Property<DateTime>("CreatedAtUTC");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("LastUpdatedAtUTC");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("ChannelId", "CourseId")
                        .IsUnique();

                    b.ToTable("ChannelCourse");
                });

            modelBuilder.Entity("VH.PluralsightScraper.Domain.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAtUTC");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime?>("DatePublished");

                    b.Property<DateTime?>("LastUpdatedAtUTC");

                    b.Property<string>("LastUpdatedBy")
                        .HasMaxLength(50);

                    b.Property<int>("Level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("VH.PluralsightScraper.Domain.ChannelCourse", b =>
                {
                    b.HasOne("VH.PluralsightScraper.Domain.Channel", "Channel")
                        .WithMany("ChannelCourses")
                        .HasForeignKey("ChannelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VH.PluralsightScraper.Domain.Course", "Course")
                        .WithMany("CourseChannels")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
